{
  "openapi": "3.0.0",
  "info": {
    "title": "Service Booking System API",
    "version": "1.0.0",
    "description": "API Documentation for Service Booking System"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Local API Server"
    }
  ],
  "paths": {
    "/auth/register/customer": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string",
                      "example": "Bearer"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/provider": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new service provider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Provider registered successfully"
          }
        }
      }
    },
    "/auth/register/admin": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new admin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin registered successfully"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string",
                      "example": "Bearer"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid login credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["Services"],
        "summary": "List all published services",
        "responses": {
          "200": {
            "description": "List of services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Services"],
        "summary": "Create a new service",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Service created successfully"
          }
        }
      }
    },
    "/services/{service}": {
      "get": {
        "tags": ["Services"],
        "summary": "Get service details",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service details"
          }
        }
      },
      "put": {
        "tags": ["Services"],
        "summary": "Update service",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Services"],
        "summary": "Delete service",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Service deleted successfully"
          }
        }
      }
    },
    "/availabilities": {
      "get": {
        "tags": ["Availabilities"],
        "summary": "List availabilities",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of availabilities"
          }
        }
      },
      "post": {
        "tags": ["Availabilities"],
        "summary": "Create availability",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Availability created successfully"
          }
        }
      }
    },
    "/services/{service}/available-slots": {
      "get": {
        "tags": ["Bookings"],
        "summary": "Get available booking slots",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of available slots"
          }
        }
      }
    },
    "/bookings": {
      "get": {
        "tags": ["Bookings"],
        "summary": "List user bookings",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of bookings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Bookings"],
        "summary": "Create a new booking",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully"
          }
        }
      }
    },
    "/bookings/{booking}/status": {
      "put": {
        "tags": ["Bookings"],
        "summary": "Update booking status",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "booking",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "confirmed", "cancelled", "completed"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking status updated successfully"
          }
        }
      }
    },
    "/reports/bookings": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get bookings report",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Bookings report"
          }
        }
      }
    },
    "/reports/cancellation-rates": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get cancellation rates report",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Cancellation rates report"
          }
        }
      }
    },
    "/reports/peak-hours": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get peak hours report",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Peak hours report"
          }
        }
      }
    },
    "/reports/average-duration": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get average duration report",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Average duration report"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password", "password_confirmation"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "password_confirmation": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["customer", "provider"]
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "is_published": {
            "type": "boolean"
          }
        }
      },
      "ServiceRequest": {
        "type": "object",
        "required": ["name", "duration", "price"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "minimum": 15,
            "maximum": 480
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "is_published": {
            "type": "boolean"
          }
        }
      },
      "BookingRequest": {
        "type": "object",
        "required": ["service_id", "start_time"],
        "properties": {
          "service_id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "service_id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "cancelled", "completed"]
          }
        }
      },
      "AvailabilityRequest": {
        "type": "object",
        "required": ["day_of_week", "start_time", "end_time"],
        "properties": {
          "day_of_week": {
            "type": "string",
            "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          },
          "start_time": {
            "type": "string",
            "format": "time"
          },
          "end_time": {
            "type": "string",
            "format": "time"
          },
          "recurring": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["customer", "provider", "admin"]
          },
          "timezone": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}